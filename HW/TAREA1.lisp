;Dado un arbol (A (B (K L M (O S)) C (P R (N W (F) Y)) D (Q) E (T (G)) ))
;Calcular: 
;a)Altura del arbol b)Grado del arbol
;c)Impresion por niveles d)Invertir a profundidad
;(CD#P"/path")
;(CD #P "/home/htellezb/Documents/lisp/")
;(LOAD "file.lisp")

;a)
(PRINT 'PROFUNDIDAD)
(DEFUN PROFUNDIDAD(LST)
	(COND 
		((NULL LST) 1)
		((ATOM LST) 0)
		(t(MAX (+ (PROFUNDIDAD(CAR LST)) 1) (PROFUNDIDAD(CDR LST)) ))
		))

;b)
(PRINT 'GRADO)
(SETQ CONT 0)
(DEFUN GRADO (LST)
	(GRADO2(CAR (CDR LST)))
)

(DEFUN GRADO2(LST)
	(PRINT LST)
	;(PRINT CONT)
	(COND
		((NULL LST) 0)
		((LISTP (CAR LST)) (PRINT 'BRK) 0 (GRADO2(CAR LST)) (GRADO2(CDR LST)) )
		(t(SETQ CONT (+ 1 (GRADO2(CDR LST)))) (MAX CONT (GRADO2(CDR LST))) )
	)
) 

;c)
(PRINT 'NIVELES)
(SETQ RES NIL)
(SETQ AUX NIL)
(SETQ A1 NIL)
(DEFUN NIVELES(LST)
	(PUSH (CAR LST) RES)
	(PRINT RES)
	(SETQ A1 (CADR LST))
	
	(PRINT A1)
	(NIVELES2(A1 AUX))
)
(DEFUN NIVELES2(LST A)
	(SETQ AUX A)
	(PRINT LST)
	(PRINT AUX)
	(PRINT RES)
	(COND
		;( (NULL (CDR LST)) (PUSH (CAR LST) RES) )
		;( (NULL LST) 0 )
		( (NULL LST) (NIVELES2(AUX NIL)) )
		;( (EQUAL LST '()) (NIVELES2(AUX, '())) )
		; ;( (ATOM (CAR LST)) (CAR LST) (APPEND RES (CAR LST)) (NIVELES2(CDR LST)) )
		; ;( (ATOM (CAR LST)) (CAR LST) (APPEND RES (NIVELES2(CDR LST))) )
		; ( (ATOM (CAR LST)) (PUSH (CAR LST) RES) (NIVELES2(CDR LST)) )
		; ;( (LISTP (CAR LST)) (NIVELES2(CDR LST)) (APPEND RES (NIVELES2(CAR LST))) )
		; ( (LISTP (CAR LST)) (NIVELES2(CDR LST)) (NIVELES2(CAR LST)) )

		( (LISTP (CAR LST)) (APPEND AUX (CAR LST)) (NIVELES2(CDR LST AUX)) )
		( (ATOM (CAR LST)) (PUSH (CAR LST) RES) (NIVELES2(CDR LST AUX)) )

	)
	(REVERSE RES)
)